@model MB.ViewModels.BookingPeriod
@using (Ajax.BeginForm("MakeBooking", "NewBooking", new AjaxOptions //action NewBooking on controller MakeBooking
                                                                        //not sending anything but few ajax options
        
        {//UpdateTargetId = "update-message",  //where response will be populated (update-message div)
                                                //won't be redirected, only div will be affected
            //InsertionMode = InsertionMode.Replace, //replace what is in div, not in addition to
            //HttpMethod = "POST", //do httppost
            //OnSuccess = "updateSuccess" //on success call javascript function updatesuccess
        }, new { @id = "target" }))  //giv e it a name so can update validation after gets dynamically loaded into dialog
    {
    
    @Html.ValidationSummary()

            
    
    
    
    <div id="update-message" class="error invisible"></div>
    <fieldset>
        <legend>Make Booking</legend>
        @Html.HiddenFor(model => model.Booking.ID)
        @Html.HiddenFor(model => model.Booking.BusID)
        @Html.HiddenFor(model => model.Booking.UserID)
        @Html.HiddenFor(model => model.StartDate)
        <table>
            <tbody>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Booking.Destination)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Booking.Destination)
                        <div class="clearfix"></div>
                        @Html.ValidationMessageFor(model => model.Booking.Destination)
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="editor-label">
                        @Html.Label("Booking From")
                    </div>
                </td>
                <td>
                <div class="editor-field">
                    @Html.DisplayFor(model => model.Booking.BookingDateTimeStart.Date)
                    <div class="clearfix"></div>
                    @Html.DisplayFor(model => model.Period.PeriodName)
                    @Html.HiddenFor(model => model.Booking.BookingDateTimeStart)
                    <div class="clearfix"></div>
                    @Html.ValidationMessageFor(model => model.Booking.BookingDateTimeStart)
                </div>
                </td>
            </tr>

            <tr>
                <td>
                <div class="editor-label">
                    @Html.Label("Booking Until")
                </div>
                </td>
                <td>
                <div class="editor-field">

                    @Html.EditorFor(model => model.Booking.BookingDateTimeEnd.Date)
                    <div class="clearfix"></div>
                    @Html.DropDownListFor(model => model.Period.TimeOfDay, new SelectList(ViewBag.periodlist, "TimeOfDay", "PeriodName"))
@*                    <div class="clearfix"></div>
                    @Html.EditorFor(model => model.Booking.BookingDateTimeEnd.TimeOfDay)
                    <div class="clearfix"></div>
                    @Html.ValidationMessageFor(model => model.Booking.BookingDateTimeEnd)*@
                </div>
                </td>
            </tr>
            </tbody>
        </table>
    </fieldset>
    }

<script type="text/javascript">
    $(function () {
        $(".datefield").datepicker({
            dateFormat: 'dd/mm/yy',
            minDate: new Date($("#date").val())
        });
    });
</script>

