@model MB.Models.POCO.LoginModel
@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    function showLoading() {
        $("#loading").show();
        $("#loginbutton").hide();
        //$("#logincontainer").hide();
    };
    
    function hideLoading() {
        
    };

    function onSuccess(result) {

        // if the server returned a JSON object containing a redirectTo property we redirect the browser to that url
        if (result.redirectTo)
            window.location.href = result.redirectTo;

        else { //when errors are raised
            $("#loading").hide();
            $("#loginbutton").show();
            $("#returnederrors").html(result.errorMessage);
            $("#returnederrors").show();
        }
    };

    function onFailure(result) {
        $("#loading").hide();
        $("#loginbutton").show();
    };

</script>

@*AJAX so can have busy indicator, means need to return JSON object rather than redirect because handle redirect
on client side*@

@using(Ajax.BeginForm("Login", "Home",
    new AjaxOptions { OnBegin = "showLoading", //when form posted, show loading img
                      OnComplete="hideLoading",
                      OnSuccess = "onSuccess",//when action completed hide image and redirect
                      OnFailure = "onFailure"
    }))
{
    
        

        <div id ="logincontainer">
            <div class="content">
                <h2>Please Login to the System</h2>

                <div class ="label">
                    @Html.LabelFor(m => m.UserName)
                </div>
                <div class="text-box">
                    @Html.TextBoxFor(m => m.UserName)
                    
                </div>
                <br />
                    @Html.ValidationMessageFor(m => m.UserName)
                <br />
                <div class ="label">
                    @Html.LabelFor(m => m.Password)
                </div>
                <div class="text-box">
                   @Html.PasswordFor(m => m.Password)
                    
                </div>
                <br />
                    @Html.ValidationMessageFor(m => m.Password)
                <br />
                <input type="submit" value="Login" id="loginbutton" />
                <img id="loading" src="~/Content/Images/ajaxLoading.gif" style="display:none"/>
                <br /><br />
                <a href="">forgotten password?</a>
            </div>

            @Html.ValidationSummary(true)

            @*placeholder for the error and hide it initially *@
            <div id ="returnederrors" style="display:none; margin-top:15px; color:red;"></div>
        </div>
        

}

